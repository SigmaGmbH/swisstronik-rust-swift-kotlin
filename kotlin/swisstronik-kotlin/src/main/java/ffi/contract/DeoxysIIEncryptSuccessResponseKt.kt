// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: protobuf_contracts/contract.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ffi.contract;

@kotlin.jvm.JvmName("-initializedeoxysIIEncryptSuccessResponse")
public inline fun deoxysIIEncryptSuccessResponse(block: ffi.contract.DeoxysIIEncryptSuccessResponseKt.Dsl.() -> kotlin.Unit): ffi.contract.Contract.DeoxysIIEncryptSuccessResponse =
  ffi.contract.DeoxysIIEncryptSuccessResponseKt.Dsl._create(ffi.contract.Contract.DeoxysIIEncryptSuccessResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ffi.contract.DeoxysIIEncryptSuccessResponse`
 */
public object DeoxysIIEncryptSuccessResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ffi.contract.Contract.DeoxysIIEncryptSuccessResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ffi.contract.Contract.DeoxysIIEncryptSuccessResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ffi.contract.Contract.DeoxysIIEncryptSuccessResponse = _builder.build()

    /**
     * `bytes result = 1;`
     */
    public var result: com.google.protobuf.ByteString
      @JvmName("getResult")
      get() = _builder.getResult()
      @JvmName("setResult")
      set(value) {
        _builder.setResult(value)
      }
    /**
     * `bytes result = 1;`
     */
    public fun clearResult() {
      _builder.clearResult()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ffi.contract.Contract.DeoxysIIEncryptSuccessResponse.copy(block: ffi.contract.DeoxysIIEncryptSuccessResponseKt.Dsl.() -> kotlin.Unit): ffi.contract.Contract.DeoxysIIEncryptSuccessResponse =
  ffi.contract.DeoxysIIEncryptSuccessResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

