name: Kotlin

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-jnilibs-and-publish:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25b
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: armv7-linux-androideabi,aarch64-linux-android
      - uses: Swatinem/rust-cache@v2
      - name: Install more rust stuff
        run: |
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
      - run: cargo install cargo-ndk
      - name: Build
        run: |
          cargo +nightly ndk -t i686-linux-android -t x86_64-linux-android -t armeabi-v7a -t arm64-v8a -o kotlin/swisstronik-kotlin/src/main/jniLibs/ build -Zbuild-std --profile release-full
      - uses: actions/upload-artifact@v3
        with:
          name: JNILibs
          path:  ./kotlin/swisstronik-kotlin/src/main/jniLibs/
      - name: Publish package
        uses: gradle/gradle-build-action@v2.7.0
        with:
          arguments: :swisstronik-kotlin:publishReleasePublicationToGitHubPackagesRepository
          build-root-directory: kotlin/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}